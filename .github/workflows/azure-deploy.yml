name: Build and Deploy to Azure
on:
  push:
    branches: [ master ]
  workflow_dispatch:

# Add permissions block for OIDC authentication
permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Try Docker Hub login instead since ACR is timing out
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Network diagnostics to help debug
      - name: Network diagnostics
        run: |
          echo "Running network diagnostics..."
          echo "DNS resolution test:"
          nslookup hub.docker.com
          echo "Connection test:"
          curl -v https://hub.docker.com/v2/ || true
          echo "Registry ping:"
          timeout 10 docker info || true

      # Tag with both latest and Git SHA
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/peakperformr-api:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/peakperformr-api:${{ github.sha }}
          network: host

      - name: Azure login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.PEAKPERFORMRAPI_AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.PEAKPERFORMRAPI_AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.PEAKPERFORMRAPI_AZURE_SUBSCRIPTION_ID }}
          # enable-AzPSSession: true # Usually not needed for inlineScript with Bash

      - name: Set Azure CLI debug logging
        run: |
          az config set core.collect_telemetry=yes
          az config set logging.log_destination=stdout
          # Check if we can access the subscription
          echo "Checking subscription access..."
          az account show
          # Check if we can list resource groups
          echo "Listing resource groups..."
          az group list --query "[].name" -o tsv

      # Use unique Git SHA tag in update command - COMMENT REMOVED
      - name: Update Container App
        uses: azure/CLI@v1
        with:
          inlineScript: |
            echo "Setting up error handling..."
            set -e
            set -o pipefail

            echo "Getting Container App details..."
            az containerapp show --name ${{ secrets.PEAKPERFORMRAPI_CONTAINER_APP_NAME }} --resource-group ${{ secrets.PEAKPERFORMRAPI_RESOURCE_GROUP }} || echo "Error getting Container App details"

            echo "Updating container app image using Git SHA tag..."
            az containerapp update \
              --name ${{ secrets.PEAKPERFORMRAPI_CONTAINER_APP_NAME }} \
              --resource-group ${{ secrets.PEAKPERFORMRAPI_RESOURCE_GROUP }} \
              --image ${{ secrets.DOCKER_HUB_USERNAME }}/peakperformr-api:${{ github.sha }} \
              --set-env-vars "ALLOWED_ORIGIN=${{ secrets.PEAKPERFORMRAPI_ALLOWED_ORIGIN }}" "R_CONFIG_ACTIVE=production" \
              --debug
