% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cluster_player_performance.R
\name{cluster_player_performance}
\alias{cluster_player_performance}
\title{Cluster Player Performance}
\usage{
cluster_player_performance(
  player_trajectories,
  sports_data,
  max_debut_age = 23,
  min_age = 18,
  num_clusters = 5,
  seed = 123,
  clara_samples = 5000,
  plot_distributions = FALSE,
  print_summaries = FALSE,
  save_output = FALSE,
  output_file = "season_clusters.csv"
)
}
\arguments{
\item{player_trajectories}{A data frame containing player predicted trajectories.
Must include 'id', 'age', and 'predicted_value' columns.}

\item{sports_data}{A data frame containing player sports data.
Must include 'id', 'age', 'league', 'position', 'sport', and 'season' columns.}

\item{max_debut_age}{Maximum age for player debut to be included in analysis. Default is 23.}

\item{min_age}{Minimum age for player data to be included. Default is 18.}

\item{num_clusters}{Number of clusters to create. Default is 5.}

\item{seed}{Random seed for reproducibility. Default is 123.}

\item{clara_samples}{Number of samples for CLARA clustering. Default is 5000.}

\item{plot_distributions}{Logical. Whether to plot distributions of scaled values and clusters. Default is FALSE.}

\item{print_summaries}{Logical. Whether to print summary statistics of the clusters. Default is FALSE.}

\item{save_output}{Logical. Whether to save the output to a CSV file. Default is FALSE.}

\item{output_file}{Character. File name for saving output if save_output is TRUE. Default is "season_clusters.csv".}
}
\value{
A data frame with player data, scaled values, and assigned performance tiers.
}
\description{
Clusters player performance based on predicted trajectory data,
assigning players to performance tiers based on their scaled values.
}
\examples{
\dontrun{
# Load data
sports <- build_all_sports()
player_trajectories <- readr::read_csv("player_spline_predictions.csv")

# Run clustering
result <- cluster_player_performance(
  player_trajectories = player_trajectories,
  sports_data = sports,
  plot_distributions = TRUE,
  print_summaries = TRUE
)

# View results
head(result)
}

}
